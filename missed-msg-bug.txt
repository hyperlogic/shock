
SERVER LOG
------------------------

script
Domain Server Assignment Clients
[03/02 19:13:15] [DEBUG] [31168] [agent] Downloading script at "file:///c:/msys64/home/anthony/code/shock/shock-ac-min.js"
[03/02 19:13:15] [DEBUG] [31168] [agent] Downloaded script: "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n//\r\n// shock-ac.js\r\n//\r\n// Assignment client script for shock environment\r\n//\r\n\r\nvar ORIGIN = {x: 0, y: 0, z: 0};\r\nvar soundURL = \"https://s3.amazonaws.com/hifi-public/sounds/08_Funny_Bone.wav\";\r\nvar sound = SoundCache.getSound(soundURL);\r\nvar initialized = false;\r\nvar frameCount = 0;\r\nvar TRIGGER_CHANNEL = \"shock-trigger-channel\";\r\nvar RESET_CHANNEL = \"shock-reset-channel\";\r\n\r\nvar entityNames = [\"debug-panel\",\r\n \"entry-back-trigger\", // used to detect when avatar is deep inside container.\r\n \"container-trigger\", // used to detect when avatars are in the container.\r\n \"entry-collision\", // used to block front of container\r\n \"exit-collision\"]; // used to block back of container\r\nvar entityIDMap = {};\r\n\r\nvar numAvatarsInEntryTrigger = 0;\r\nvar numAvatarsInContainer = 0;\r\n\r\nvar state;\r\nvar timeInState = 0;\r\n\r\nvar stateTable = {\r\n uninitialized: { update: uninitializedUpdate },\r\n idle: { enter: idleEnter, update: idleUpdate },\r\n closeEntryDoors: { enter: closeEntryDoorsEnter, update: closeEntryDoorsUpdate },\r\n openExitDoors: { enter: openExitDoorsEnter, update: openExitDoorsUpdate }\r\n};\r\n\r\nfunction editEntity(name, props) {\r\n var id = lookupEntityByName(name);\r\n if (id) {\r\n Entities.editEntity(id, props);\r\n }\r\n}\r\n\r\nfunction lookupEntityByName(name) {\r\n var id = entityIDMap[name];\r\n if (id) {\r\n return id;\r\n } else {\r\n debug(\"ERROR: Could not find entity \\\"\" + name + \"\\\"\");\r\n }\r\n}\r\n\r\nvar lineBuffer = [\"~\", \"~\", \"~\", \"~\", \"~\", \"~\", \"~\", \"~\", \"~\"];\r\nfunction debug(str) {\r\n print(str);\r\n lineBuffer.push(str);\r\n var debugPanelID = entityIDMap[\"debug-panel\"];\r\n if (debugPanelID) {\r\n Entities.editEntity(debugPanelID, {text: lineBuffer.slice(-8, lineBuffer.length).join(\"\\n\")});\r\n }\r\n}\r\n\r\nfunction uninitializedUpdate(dt) {\r\n var entities = Entities.findEntities(ORIGIN, 100);\r\n\r\n if (entities.length === 0) {\r\n // try again later...\r\n return;\r\n }\r\n\r\n // fill up entityIDMap\r\n var i, l = entities.length;\r\n for (i = 0; i < l; i++) {\r\n var name = Entities.getEntityProperties(entities[i], \"name\").name;\r\n var j, ll = entityNames.length;\r\n for (j = 0; j < ll; j++) {\r\n if (name === entityNames[j]) {\r\n print(\"Found \" + entityNames[j] + \": \" + entities[i]);\r\n entityIDMap[entityNames[j]] = entities[i];\r\n }\r\n }\r\n }\r\n\r\n setState(\"idle\");\r\n}\r\n\r\n//\r\n// idle\r\n//\r\n\r\nfunction idleEnter() {\r\n editEntity(\"entry-collision\", { collisionless: true, visible: false });\r\n editEntity(\"exit-collision\", { collisionless: false, visible: true });\r\n}\r\n\r\nfunction idleUpdate(dt) {\r\n if (numAvatarsInEntryTrigger > 0) {\r\n setState(\"closeEntryDoors\");\r\n }\r\n}\r\n\r\n//\r\n// closeEntryDoors\r\n//\r\n\r\nfunction closeEntryDoorsEnter() {\r\n editEntity(\"entry-collision\", { collisionless: false, visible: true });\r\n}\r\n\r\nfunction closeEntryDoorsUpdate(dt) {\r\n if (timeInState > 3.0) {\r\n setState(\"openExitDoors\");\r\n }\r\n}\r\n\r\n//\r\n// openExitDoors\r\n//\r\n\r\nfunction openExitDoorsEnter() {\r\n editEntity(\"exit-collision\", { collisionless: true, visible: false });\r\n}\r\n\r\nfunction openExitDoorsUpdate(dt) {\r\n // TODO: push player out of the container\r\n if (numAvatarsInContainer === 0) {\r\n setState(\"idle\");\r\n }\r\n}\r\n\r\n//\r\n//\r\n//\r\n\r\nfunction setState(newState) {\r\n if (state !== newState) {\r\n\r\n // exit old state\r\n if (stateTable[state]) {\r\n var exitFunc = stateTable[state].exit;\r\n if (exitFunc) {\r\n exitFunc();\r\n }\r\n } else {\r\n debug(\"ERROR: no state table for state = \" + state);\r\n }\r\n\r\n // enter new state\r\n if (stateTable[newState]) {\r\n var enterFunc = stateTable[newState].enter;\r\n if (enterFunc) {\r\n enterFunc();\r\n }\r\n } else {\r\n debug(\"ERROR: no state table for state = \" + newState);\r\n }\r\n\r\n timeInState = 0;\r\n state = newState;\r\n debug(\"state = \" + state);\r\n }\r\n}\r\n\r\nfunction update(dt) {\r\n var updateFunc = stateTable[state].update;\r\n timeInState += dt;\r\n if (updateFunc) {\r\n updateFunc(dt);\r\n }\r\n}\r\n\r\nfunction reset() {\r\n goToState(\"idle\");\r\n}\r\n\r\nEntityViewer.setPosition(ORIGIN);\r\nEntityViewer.setCenterRadius(60000);\r\nvar octreeQueryInterval = Script.setInterval(function() {\r\n EntityViewer.queryOctree();\r\n}, 1000);\r\n\r\nScript.update.connect(update);\r\n\r\nMessages.subscribe(TRIGGER_CHANNEL);\r\nMessages.messageReceived.connect(function (channel, message, senderID) {\r\n print(\"MESSAGE, channel = \" + channel + \", message = \" + message + \", senderID = \" + senderID);\r\n if (channel === TRIGGER_CHANNEL) {\r\n var data = JSON.parse(message);\r\n switch (data.action) {\r\n case 'enter':\r\n if (data.entityID === lookupEntityByName(\"entry-back-trigger\")) {\r\n numAvatarsInEntryTrigger++;\r\n } else if (data.entityID === lookupEntityByName(\"container-trigger\")) {\r\n numAvatarsInContainer++;\r\n }\r\n break;\r\n case 'leave':\r\n if (data.entityID === lookupEntityByName(\"entry-back-trigger\")) {\r\n numAvatarsInEntryTrigger--;\r\n } else if (data.entityID === lookupEntityByName(\"container-trigger\")) {\r\n numAvatarsInContainer--;\r\n }\r\n break;\r\n }\r\n } else if (channel === RESET_CHANNEL) {\r\n reset();\r\n }\r\n});\r\n\r\nsetState(\"uninitialized\");\r\n\r\n\n},{}]},{},[1]);\n"
[03/02 19:13:15] [WARNING] [31168] [agent] DependencyManager::get(): No instance available for class controller::ScriptingInterface
[03/02 19:13:15] [DEBUG] [31168] [agent] script:print()<< ERROR: no state table for state = undefined
[03/02 19:13:15] [DEBUG] [31168] [agent] script:print()<< state = uninitialized
[03/02 19:13:17] [DEBUG] [31168] [agent] script:print()<< Found entry-back-trigger: {7e1281e5-9090-4d3f-99bb-b3c8babe7138}
[03/02 19:13:17] [DEBUG] [31168] [agent] script:print()<< Found entry-collision: {88e116e3-3399-45bb-9677-9507cd614e1d}
[03/02 19:13:17] [DEBUG] [31168] [agent] script:print()<< Found container-trigger: {be853e91-4d9d-4bcc-ab92-c0185fdacd86}
[03/02 19:13:17] [DEBUG] [31168] [agent] script:print()<< Found exit-collision: {9d11a879-ee38-4903-88aa-1ecf0b2a6ad5}
[03/02 19:13:17] [DEBUG] [31168] [agent] script:print()<< Found debug-panel: {843306ad-e98c-4af8-9c08-8522781dc1a6}
[03/02 19:13:17] [DEBUG] [31168] [agent] script:print()<< state = idle
[03/02 19:13:42] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":0}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:13:44] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":0}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:13:44] [DEBUG] [31168] [agent] script:print()<< state = closeEntryDoors
[03/02 19:13:47] [DEBUG] [31168] [agent] script:print()<< state = openExitDoors
[03/02 19:13:49] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"leave","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":1}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:13:49] [DEBUG] [31168] [agent] script:print()<< state = idle
[03/02 19:13:49] [DEBUG] [31168] [agent] script:print()<< state = closeEntryDoors
[03/02 19:13:49] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"leave","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":1}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:13:52] [DEBUG] [31168] [agent] script:print()<< state = openExitDoors
[03/02 19:13:52] [DEBUG] [31168] [agent] script:print()<< state = idle
[03/02 19:14:06] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":2}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:07] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":2}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:07] [DEBUG] [31168] [agent] script:print()<< state = closeEntryDoors
[03/02 19:14:10] [DEBUG] [31168] [agent] script:print()<< state = openExitDoors
[03/02 19:14:13] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"leave","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":3}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:13] [DEBUG] [31168] [agent] script:print()<< state = idle
[03/02 19:14:13] [DEBUG] [31168] [agent] script:print()<< state = closeEntryDoors
[03/02 19:14:13] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"leave","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":3}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:16] [DEBUG] [31168] [agent] script:print()<< state = openExitDoors
[03/02 19:14:16] [DEBUG] [31168] [agent] script:print()<< state = idle
[03/02 19:14:27] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":4}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:29] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":4}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:29] [DEBUG] [31168] [agent] script:print()<< state = closeEntryDoors
[03/02 19:14:32] [DEBUG] [31168] [agent] script:print()<< state = openExitDoors
[03/02 19:14:50] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":6}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:50] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"enter","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":6}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:52] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"leave","entityID":"{be853e91-4d9d-4bcc-ab92-c0185fdacd86}","sequenceNumber":7}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}
[03/02 19:14:52] [DEBUG] [31168] [agent] script:print()<< MESSAGE, channel = shock-trigger-channel, message = {"action":"leave","entityID":"{7e1281e5-9090-4d3f-99bb-b3c8babe7138}","sequenceNumber":7}, senderID = {0a56a982-964e-4ea3-8d39-c12afb19c5ba}


client
http://s3.amazonaws.com/hifi-public/scripts/html/gridControls.html
[03/02 19:13:30] [DEBUG] Web Window JS message: http://s3.amazonaws.com/hifi-public/scripts/html/eventBridgeLoader.js 52 WebWindow is [object Object]
[03/02 19:13:42] [DEBUG] script:print()<< trigger enter, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 0
[03/02 19:13:43] [DEBUG] script:print()<< trigger enter, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 0
[03/02 19:13:49] [DEBUG] script:print()<< trigger leave, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 1
[03/02 19:13:49] [DEBUG] script:print()<< trigger leave, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 1
[03/02 19:14:06] [DEBUG] script:print()<< trigger enter, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 2
[03/02 19:14:07] [DEBUG] script:print()<< trigger enter, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 2
[03/02 19:14:13] [DEBUG] script:print()<< trigger leave, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 3
[03/02 19:14:13] [DEBUG] script:print()<< trigger leave, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 3
[03/02 19:14:27] [DEBUG] script:print()<< trigger enter, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 4
[03/02 19:14:29] [DEBUG] script:print()<< trigger enter, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 4
[03/02 19:14:34] [DEBUG] script:print()<< trigger leave, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 5
[03/02 19:14:34] [DEBUG] script:print()<< trigger leave, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 5
[03/02 19:14:50] [DEBUG] script:print()<< trigger enter, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 6
[03/02 19:14:50] [DEBUG] script:print()<< trigger enter, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 6
[03/02 19:14:52] [DEBUG] script:print()<< trigger leave, entityId = {be853e91-4d9d-4bcc-ab92-c0185fdacd86}, seq = 7
[03/02 19:14:52] [DEBUG] script:print()<< trigger leave, entityId = {7e1281e5-9090-4d3f-99bb-b3c8babe7138}, seq = 7